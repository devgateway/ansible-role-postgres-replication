---
- name: Initialize the data dir
  command: "{{ pgrs_bin_dir }}/pg_ctl initdb -D {{ pgrs_data_dir | quote }}"
  args:
    creates: "{{ pgrs_data_dir }}/postgresql.conf"
  become: true
  become_user: postgres

- name: Disable synchronous standby
  ini_file:
    path: "{{ pgrs_data_dir }}/postgresql.conf"
    section: null
    option: synchronous_standby_names
    state: absent

- name: Apply replication settings
  ini_file:
    path: "{{ pgrs_data_dir }}/postgresql.conf"
    section: null
    option: "{{ item.key }}"
    value: |-
      {%  if item.value is sameas true %}
      {{    'on' }}
      {%- elif item.value is sameas false %}
      {{    'off' }}
      {%- elif item.value is string %}
      {{    item.value | quote }}
      {%- else %}
      {{    item.value }}
      {%- endif %}
  with_dict: "{{ pgrs_pg_settings }}"
  loop_control:
    label: "{{ item.key }}"

- name: Configure Postgres authentication
  template:
    src: pg_hba.conf.j2
    dest: "{{ pgrs_data_dir }}/pg_hba.conf"
    owner: postgres

- name: Create replication user
  postgresql_user:
    name: "{{ pgrs_user.name }}"
    password: "{{ pgrs_user.password }}"
    role_attr_flags: REPLICATION,LOGIN
  become: true
  become_user: postgres
  register: create_user
  ignore_errors: true

- name: Start Postgres service
  service:
    name: "{{ pgrs_service }}"
    state: started
  when: create_user.failed

- name: Create replication user (retry)
  postgresql_user:
    name: "{{ pgrs_user.name }}"
    password: "{{ pgrs_user.password }}"
    role_attr_flags: REPLICATION,LOGIN
  become: true
  become_user: postgres
  when: create_user.failed
