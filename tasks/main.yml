---
- name: Install Postgres
  include_role:
    name: devgateway.vendor-postgres

- name: Install Pacemaker
  package:
    name: pcs

- name: Install Postgres management library for Python
  package:
    name: python-psycopg2

- name: Create archive directory
  file:
    path: "{{ pgha_archive_dir }}"
    state: directory
    owner: postgres
    mode: 0770

- name: Read Postgres uses configuration
  user:
    name: postgres
  register: postgres_user
  check_mode: true

- name: Configure remote authentication
  lineinfile:
    create: true
    mode: 0600
    owner: postgres
    path: "{{ postgres_user.home }}/.pgpass"
    line: >-
      {{ pgha_virtual_ip }}:*:{{ pgha_user.database }}:{{ pgha_user.name }}:{{ pgha_user.password }}

- name: Configure master
  import_tasks: master.yml
  delegate_to: "{{ pgha_master }}"
  run_once: true

- name: Configure slave
  import_tasks: slave.yml
  delegate_to: "{{ pgha_slave }}"
  run_once: true

- name: Set up high availability
  include_role:
    name: devgateway.pacemaker
  vars:
    pacemaker_password: toor
    pacemaker_cluster_name: postgres
    pacemaker_properties:
      stonith-enabled: "false"
      no-quorum-policy: ignore
    pacemaker_resource_defaults:
      resource_stickiness: INFINITY
      migration_threshold: 1
    pacemaker_resources:
      - id: master-ip
        type: "ocf:heartbeat:IPaddr2"
        options:
          ip: "{{ pgha_virtual_ip }}"
      - id: postgres
        type: "ocf:heartbeat:pgsql"
        master:
          id: pg-replica-set
          master:
            max: 1
            node_max: 1
          clone:
            max: 2
            node_max: 1
          notify: true
        options:
          pgctl: "{{ pgha_bin_dir }}/pg_ctl"
          psql: "{{ pgha_bin_dir }}/psql"
          pgdata: "{{ pgha_data_dir }}"
          rep_mode: sync
          node_list: "{{ pgha_master }} {{ pgha_slave }}"
          restore_command: "{{ pgha_recovery_settings.restore_command }}"
          master_ip: "{{ pgha_virtual_ip }}"
          restart_on_promote: "true"
        op:
          - action: start
            options:
              on_fail: restart
          - action: monitor
            options:
              interval: 60s
              on_fail: restart
          - action: monitor
            options:
              role: Master
              interval: 3s
              on_fail: restart
          - action: promote
            options:
              on_fail: restart
          - action: demote
            options:
              on_fail: stop
          - action: stop
            options:
              on_fail: block
          - action: notify
    pacemaker_constraints:
      - colocation add master-ip with Master pg-replica-set INFINITY
      - order promote pg-replica-set then start master-ip symmetrical=false score=INFINITY
      - order demote pg-replica-set then stop master-ip symmetrical=false score=0
